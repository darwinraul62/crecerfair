@model ProviderEditUsersViewModel
@{
    ViewBag.Title = $"{Model.Tradename} - Asignar Usuarios";
}

<div class="row">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Inicio</a></li>            
            @if(!User.GetFairProviderId().HasValue)
            {
                <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Provider">Proveedores</a></li>
            }
            <li class="breadcrumb-item active">Usuarios</li>
        </ol>
    </nav>
</div>


<div id="content-add-user" class="col-12 col-xl-12">
    <div class="card">
        @* <div class="card-header">
            <h5 class="card-title">@Model.Tradename</h5>
            <h6 class="card-subtitle text-muted">Asignar Usuarios</h6>
            </div> *@
        <div class="card-body">
            <div class="mb-1">
                <msgblock></msgblock>
            </div>
            <input type="hidden" asp-for="ProviderId">
            <div class="row">
                <div class="mb-3 col-md-6">
                    <label class="form-label">Agregar Usuario</label>
                    <select id="user-search-select" class="form-control select2" data-toggle="select2"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">Usuarios Agregados</h5>
        </div>
        <div class="card-body">
            <table id="datatables-users" class="table table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th style="width: 40px;"></th>
                        <th>ID</th>
                        <th>Email</th>
                        <th>Nombres</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts{
<script>
    $(function () {
        var contentElement = $("#content-add-user");

        var table = $("#datatables-users").DataTable(
            {
                orderCellsTop: true,
                fixedHeader: true,
                "order": [[3, 'asc']],
                "ordering": true,
                 "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "Nada para mostrar",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "No hay registros",
                    "infoFiltered": "(filtrado de _MAX_ registros en total)",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                },
                "columns": [
                    {
                        "name": "actions",
                        "data": null,
                        "orderable": false,
                        "defaultContent":
                            `
						<div class="table-action">						
                            <a action-type="DELETE" href="#"><i class="align-middle me-2 far fa-trash-alt"></i></a>                        
						</div>
						`
                    },
                    { "data": "userId", "name": "UserId", orderable: false, "searchable": false, visible: false },
                    { "data": "userLogonName", "name": "UserLogonName", orderable: true },
                    { "data": "userFullName", "name": "UserFullName", orderable: true },
                ],
                "ajax": '@Html.Raw(@Url.Action("GetUsers","Provider", new { providerId = Model.ProviderId } ))'
            }
        );

        $('#datatables-users tbody').on('click', 'a', function () {

            let data = $('#datatables-users').DataTable().row($(this).parents('tr')).data();
            let action = $(this).attr('action-type');

            if (action == 'DELETE')
                postRemoveUser('@Model.ProviderId', data["userId"]);
        });

        $('#user-search-select').select2({
            placeholder: "Escriba para buscar un usuario",
            ajax: {
                url: '@Url.Action("Search","User")',
                delay: 500,
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1,
                        pageSize: 10
                    }
                    // Query parameters will be ?search=[term]
                    return query;
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;

                    return {
                        results: data.results,
                        pagination: {
                            more: (params.page * data.pageSize) < data.totalCount
                        }
                    };
                },
                dataType: 'json'
                // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
            }
        });

        $('#user-search-select').on('select2:select', function (e) {
            var data = e.params.data;
            postAddUser('@Model.ProviderId', data.id);
        });

        function postAddUser(providerId, userId) {
            showLoading(contentElement);

            $.ajax({
                type: "POST",
                url: '@Html.Raw(Url.Action("AddUser","Provider"))',
                data: { providerId: providerId, userId: userId },
                success: function (data) {
                    hideLoading(contentElement);
                    if (data.isValid) {
                        refreshListUsers();
                    } else {
                        window.notyf.open({
                            type: 'error',
                            message: data.messages[0].text
                        });
                    }
                },
                error: function () {
                    hideLoading(contentElement);
                    window.notyf.open({
                        type: 'error',
                        message: "No se pudo agregar el usuario"
                    });
                },
                dataType: 'json'
            });
        }

        function postRemoveUser(providerId, userId) {
            showLoading(contentElement);

            $.ajax({
                type: "POST",
                url: '@Html.Raw(Url.Action("RemoveUser","Provider"))',
                data: { providerId: providerId, userId: userId },
                success: function (data) {
                    hideLoading(contentElement);
                    if (data.isValid) {
                        refreshListUsers();
                    } else {
                        window.notyf.open({
                            type: 'error',
                            message: data.messages[0].text
                        });
                    }
                },
                error: function () {
                    hideLoading(contentElement);
                    window.notyf.open({
                        type: 'error',
                        message: "No se pudo quitar el usuario"
                    });
                },
                dataType: 'json'
            });
        }

        function hideLoading(element, text) {
            if (!element) {
                element = $("main.content");
            }

            element.waitMe('hide');
        }

        function showLoading(element, text) {
            if (!element) {
                element = $("main.content");
            }

            if (!text) {
                if (element.parent().height() > 200)
                    text = "Cargando...";
            }

            element.waitMe({
                //none, rotateplane, stretch, orbit, roundBounce, win8, 
                //win8_linear, ios, facebook, rotation, timer, pulse, 
                //progressBar, bouncePulse or img
                effect: 'bounce',
                //place text under the effect (string).
                text: text,
                //background for container (string).
                bg: 'rgba(32, 38, 52,0.5)',
                //color for background animation and text (string).
                color: '#3680BF',
                //change width for elem animation (string).
                sizeW: '',
                //change height for elem animation (string).
                sizeH: '',
                // url to image
                source: ''
            });
        }

        function refreshListUsers() {
             table.ajax.reload();
        }

    });
</script>
}